{"ast":null,"code":"var _jsxFileName = \"C:\\\\trying1\\\\mission2\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\n// Register.js\n\n/* 회원가입  페이지 */\nimport React, { useRef, useState, useEffect } from \"react\"; // state관리와, ref 바인딩을 위한 hooks 라이브러리 임포트\nimport { post } from \"axios\"; // 비동기 요청을 위한 axios 라이브러리\nimport { Link, useHistory, useLocation, useParams } from \"react-router-dom\"; // 라우팅을 위한 라우터 라이브러리\nimport { Button } from \"react-bootstrap\"; // React Material 디자인 Button 컴포넌트 입니다.\nimport Form from 'react-bootstrap/Form';\nimport \"../css/register.css\"; // 회원가입 페이지 커스텀 디자인 CSS 입니다.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = props => {\n  _s();\n  // 회원가입 페이지입니다. props는 회원수정인지 판단하기 위하여 매개변수로 받습니다. (info)\n  const location = useLocation();\n  const history = useHistory();\n  const [profile, setProfile] = useState(null);\n  const [formData, setFormData] = useState({\n    profile: null,\n    userId: \"\",\n    userName: \"\",\n    userPassword: \"\",\n    userPassword2: \"\",\n    userMail: \"\",\n    userPhone: \"\"\n  });\n  const [tempFormData, setTempFormData] = useState({\n    profile: null,\n    userId: \"\",\n    userName: \"\",\n    userPassword: \"\",\n    userPassword2: \"\",\n    userMail: \"\",\n    userPhone: \"\"\n  });\n  const profileRef = useRef();\n  const iconRef = useRef();\n  const previewRef = useRef();\n  /* 위에는 변수선언부분들 */\n\n  // 프로필 로딩, 페이지 로드시 한번만 실행합니다.\n  useEffect(() => {\n    if (location.state) {\n      // 회원수정페인지 확인하는 if문\n      fetch(`http://localhost:3000/api/user/update/${location.state.idx}`, {\n        method: \"GET\"\n      }).then(data => data.json()).then(json => {\n        setTempFormData({\n          profile: json[0][5],\n          userId: json[0][6],\n          userName: json[0][1],\n          userPassword: json[0][2],\n          userPassword2: json[0][2],\n          userMail: json[0][3],\n          userPhone: json[0][4]\n        });\n        setFormData({\n          profile: json[0][5],\n          userId: json[0][6],\n          userName: json[0][1],\n          userPassword: json[0][2],\n          userPassword2: json[0][2],\n          userMail: json[0][3],\n          userPhone: json[0][4]\n        });\n      });\n      previewRef.current.style.display = \"block\";\n      iconRef.current.style.display = \"none\";\n    }\n  }, []);\n  const handleProfileClick = () => {\n    // 예쁜 버튼을 사용하기위해, 실제로 프로필사진을 업로드하는 버튼은 숨겨두고 이쁜버튼을누르면 숨겨진버튼이 클릭되도록 하는 부분입니다.\n    profileRef.current.click();\n  };\n  const handleProfile = event => {\n    // 프로필사진을 올리면, 미리보기에 사진이 보여지는 부분입니다.\n    setProfile(URL.createObjectURL(event.target.files[0]));\n    previewRef.current.style.display = \"block\";\n    iconRef.current.style.display = \"none\";\n    setFormData({\n      ...formData,\n      profile: event.target.files[0] // API에 요청을 날릴 Form State에 정보를 추가합니다.\n    });\n  };\n\n  const handleValueChange = event => {\n    // API 요청에 날릴 Form state에 정보를 추가합니다.\n    setFormData({\n      ...formData,\n      [event.target.name]: event.target.value\n    });\n  };\n  const registerSubmit = event => {\n    // 회원가입버튼을 누르면 동작합니다.\n    event.preventDefault();\n    if (formData.userPassword !== formData.userPassword2) {\n      // 비밀번호가 서로 다른지 체크하는 validation 코드입니다.\n      alert(\"비밀번호를 다시 확인 해주세요\");\n      return;\n    }\n    const reqFormData = new FormData(); // 파일이 업로드되는 폼이기때문에, multipart/form-data로 전송해야합니다.\n    reqFormData.append(\"profile\", formData.profile); // 입력한정보들을 폼데이터에 넣어줍니다.\n    reqFormData.append(\"userId\", formData.userId);\n    reqFormData.append(\"userName\", formData.userName);\n    reqFormData.append(\"userPassword\", formData.userPassword);\n    reqFormData.append(\"userMail\", formData.userMail);\n    reqFormData.append(\"userPhone\", formData.userPhone);\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\" // 헤더설정\n      }\n    };\n\n    fetch(\"http://localhost:3000/api/register\", {\n      method: \"POST\",\n      body: reqFormData\n    }).then(res => res.json()).then(json => {\n      if (json.success === true) {\n        // api서버에서, true가 오면, 회원가입 축하메세지가 나오며, 기본 슬라이드1페이지로 넘어갑니다.\n        alert(json.msg);\n        history.push(\"/\");\n      }\n    });\n  };\n  const updateSubmit = event => {\n    // 이부분은 회원수정버튼눌렀을때 동작합니다. 회원가입과 동일합니다.\n    event.preventDefault();\n    if (formData.userPassword !== formData.userPassword2) {\n      alert(\"비밀번호를 다시 확인 해주세요\");\n      return;\n    }\n    const reqFormData = new FormData();\n    reqFormData.append(\"profile\", formData.profile);\n    reqFormData.append(\"userId\", formData.userId);\n    reqFormData.append(\"userName\", formData.userName);\n    reqFormData.append(\"userPassword\", formData.userPassword);\n    reqFormData.append(\"userMail\", formData.userMail);\n    reqFormData.append(\"userPhone\", formData.userPhone);\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    };\n    post(`http://localhost:3000/api/user/update/${location.state.idx}`, reqFormData, config).then(res => {\n      if (res.data.success === true) {\n        alert(res.data.msg);\n        history.push(\"/management\"); // 단 회원수정을했을때는 회원관리페이지로 이동합니다.\n      }\n    });\n  };\n\n  //아래부분들은 JSX 껍데기입니다.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"registerTitle\",\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        icon: \"account_circle\",\n        className: \"profile_icon\",\n        ref: iconRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: profile ? profile : tempFormData.profile,\n        alt: \"profile_preview\",\n        className: \"profile_preview\",\n        ref: previewRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"info\",\n        className: \"profile_button\",\n        onClick: handleProfileClick,\n        children: \"\\uD68C\\uC6D0\\uC0AC\\uC9C4 \\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"hidden_file\",\n        hidden: true,\n        onChange: handleProfile,\n        ref: profileRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column_reverse column\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        outlined: true,\n        label: \"\\uC774\\uB984\",\n        className: \"userName registerInput\",\n        placeholder: \"\\uACF5\\uBC31\\uC5C6\\uC774 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n        onChange: handleValueChange,\n        name: \"userName\",\n        value: formData.userName ? formData.userName : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        outlined: true,\n        label: \"\\uC774\\uBA54\\uC77C\",\n        className: \"userEmail registerInput\",\n        placeholder: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n        type: \"email\",\n        onChange: handleValueChange,\n        name: \"userMail\",\n        value: formData.userMail ? formData.userMail : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        outlined: true,\n        label: \"\\uD734\\uB300\\uC804\\uD654\",\n        className: \"userPhone registerInput\",\n        placeholder: \"-\\uC5C6\\uC774 \\uC22B\\uC790\\uB9CC \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n        onChange: handleValueChange,\n        name: \"userPhone\",\n        value: formData.userPhone ? formData.userPhone : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        outlined: true,\n        label: \"\\uC544\\uC774\\uB514\",\n        className: \"userId registerInput\",\n        placeholder: \"\\uACF5\\uBC31\\uC5C6\\uC774 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n        onChange: handleValueChange,\n        name: \"userId\",\n        value: formData.userId ? formData.userId : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        outlined: true,\n        label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        className: \"userPassword registerInput\",\n        type: \"password\",\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n        onChange: handleValueChange,\n        name: \"userPassword\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        outlined: true,\n        label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n        className: \"userPassword2 registerInput\",\n        type: \"password\",\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n        onChange: handleValueChange,\n        name: \"userPassword2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        className: props.info ? \"registerButton updateButton\" : \"registerButton\",\n        type: \"button\",\n        onClick: props.info ? updateSubmit : registerSubmit,\n        children: props.info ? \"회원 정보 수정\" : \"회원 가입\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), !props.info ? /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"warning\",\n          className: \"registerCancleButton\",\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785 \\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"/UsoaKZFra9Agt9p8Xhq9XHnPTQ=\", false, function () {\n  return [useLocation, useHistory];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useRef","useState","useEffect","post","Link","useHistory","useLocation","useParams","Button","Form","Register","props","location","history","profile","setProfile","formData","setFormData","userId","userName","userPassword","userPassword2","userMail","userPhone","tempFormData","setTempFormData","profileRef","iconRef","previewRef","state","fetch","idx","method","then","data","json","current","style","display","handleProfileClick","click","handleProfile","event","URL","createObjectURL","target","files","handleValueChange","name","value","registerSubmit","preventDefault","alert","reqFormData","FormData","append","config","headers","body","res","success","msg","push","updateSubmit","info"],"sources":["C:/trying1/mission2/src/pages/Register.js"],"sourcesContent":["// Register.js\r\n\r\n/* 회원가입  페이지 */\r\nimport React, { useRef, useState, useEffect } from \"react\"; // state관리와, ref 바인딩을 위한 hooks 라이브러리 임포트\r\nimport { post } from \"axios\"; // 비동기 요청을 위한 axios 라이브러리\r\nimport { Link, useHistory, useLocation, useParams } from \"react-router-dom\"; // 라우팅을 위한 라우터 라이브러리\r\nimport { Button } from \"react-bootstrap\"; // React Material 디자인 Button 컴포넌트 입니다.\r\nimport Form from 'react-bootstrap/Form';\r\nimport \"../css/register.css\"; // 회원가입 페이지 커스텀 디자인 CSS 입니다.\r\n\r\nconst Register = (props) => {\r\n  // 회원가입 페이지입니다. props는 회원수정인지 판단하기 위하여 매개변수로 받습니다. (info)\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [profile, setProfile] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    profile: null,\r\n    userId: \"\",\r\n    userName: \"\",\r\n    userPassword: \"\",\r\n    userPassword2: \"\",\r\n    userMail: \"\",\r\n    userPhone: \"\",\r\n  });\r\n\r\n  const [tempFormData, setTempFormData] = useState({\r\n    profile: null,\r\n    userId: \"\",\r\n    userName: \"\",\r\n    userPassword: \"\",\r\n    userPassword2: \"\",\r\n    userMail: \"\",\r\n    userPhone: \"\",\r\n  });\r\n\r\n  const profileRef = useRef();\r\n  const iconRef = useRef();\r\n  const previewRef = useRef();\r\n  /* 위에는 변수선언부분들 */\r\n\r\n  // 프로필 로딩, 페이지 로드시 한번만 실행합니다.\r\n  useEffect(() => {\r\n    if (location.state) {\r\n      // 회원수정페인지 확인하는 if문\r\n      fetch(\r\n        `http://localhost:3000/api/user/update/${location.state.idx}`,\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      )\r\n        .then((data) => data.json())\r\n        .then((json) => {\r\n          setTempFormData({\r\n            profile: json[0][5],\r\n            userId: json[0][6],\r\n            userName: json[0][1],\r\n            userPassword: json[0][2],\r\n            userPassword2: json[0][2],\r\n            userMail: json[0][3],\r\n            userPhone: json[0][4],\r\n          });\r\n          setFormData({\r\n            profile: json[0][5],\r\n            userId: json[0][6],\r\n            userName: json[0][1],\r\n            userPassword: json[0][2],\r\n            userPassword2: json[0][2],\r\n            userMail: json[0][3],\r\n            userPhone: json[0][4],\r\n          });\r\n        });\r\n\r\n      previewRef.current.style.display = \"block\";\r\n      iconRef.current.style.display = \"none\";\r\n    }\r\n  }, []);\r\n\r\n  const handleProfileClick = () => {\r\n    // 예쁜 버튼을 사용하기위해, 실제로 프로필사진을 업로드하는 버튼은 숨겨두고 이쁜버튼을누르면 숨겨진버튼이 클릭되도록 하는 부분입니다.\r\n    profileRef.current.click();\r\n  };\r\n\r\n  const handleProfile = (event) => {\r\n    // 프로필사진을 올리면, 미리보기에 사진이 보여지는 부분입니다.\r\n    setProfile(URL.createObjectURL(event.target.files[0]));\r\n\r\n    previewRef.current.style.display = \"block\";\r\n    iconRef.current.style.display = \"none\";\r\n\r\n    setFormData({\r\n      ...formData,\r\n      profile: event.target.files[0], // API에 요청을 날릴 Form State에 정보를 추가합니다.\r\n    });\r\n  };\r\n\r\n  const handleValueChange = (event) => {\r\n    // API 요청에 날릴 Form state에 정보를 추가합니다.\r\n    setFormData({\r\n      ...formData,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const registerSubmit = (event) => {\r\n    // 회원가입버튼을 누르면 동작합니다.\r\n    event.preventDefault();\r\n    if (formData.userPassword !== formData.userPassword2) {\r\n      // 비밀번호가 서로 다른지 체크하는 validation 코드입니다.\r\n      alert(\"비밀번호를 다시 확인 해주세요\");\r\n      return;\r\n    }\r\n\r\n    const reqFormData = new FormData(); // 파일이 업로드되는 폼이기때문에, multipart/form-data로 전송해야합니다.\r\n    reqFormData.append(\"profile\", formData.profile); // 입력한정보들을 폼데이터에 넣어줍니다.\r\n    reqFormData.append(\"userId\", formData.userId);\r\n    reqFormData.append(\"userName\", formData.userName);\r\n    reqFormData.append(\"userPassword\", formData.userPassword);\r\n    reqFormData.append(\"userMail\", formData.userMail);\r\n    reqFormData.append(\"userPhone\", formData.userPhone);\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"multipart/form-data\", // 헤더설정\r\n      },\r\n    };\r\n\r\n    fetch(\"http://localhost:3000/api/register\", {\r\n      method: \"POST\",\r\n      body: reqFormData,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        if (json.success === true) {\r\n          // api서버에서, true가 오면, 회원가입 축하메세지가 나오며, 기본 슬라이드1페이지로 넘어갑니다.\r\n          alert(json.msg);\r\n          history.push(\"/\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const updateSubmit = (event) => {\r\n    // 이부분은 회원수정버튼눌렀을때 동작합니다. 회원가입과 동일합니다.\r\n    event.preventDefault();\r\n    if (formData.userPassword !== formData.userPassword2) {\r\n      alert(\"비밀번호를 다시 확인 해주세요\");\r\n      return;\r\n    }\r\n    const reqFormData = new FormData();\r\n    reqFormData.append(\"profile\", formData.profile);\r\n    reqFormData.append(\"userId\", formData.userId);\r\n    reqFormData.append(\"userName\", formData.userName);\r\n    reqFormData.append(\"userPassword\", formData.userPassword);\r\n    reqFormData.append(\"userMail\", formData.userMail);\r\n    reqFormData.append(\"userPhone\", formData.userPhone);\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n\r\n    post(\r\n      `http://localhost:3000/api/user/update/${location.state.idx}`,\r\n      reqFormData,\r\n      config\r\n    ).then((res) => {\r\n      if (res.data.success === true) {\r\n        alert(res.data.msg);\r\n        history.push(\"/management\"); // 단 회원수정을했을때는 회원관리페이지로 이동합니다.\r\n      }\r\n    });\r\n  };\r\n\r\n  //아래부분들은 JSX 껍데기입니다.\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"column\">\r\n        <h1 className=\"registerTitle\">회원가입</h1>\r\n      </div>\r\n      <div className=\"column\">\r\n        <div icon=\"account_circle\" className=\"profile_icon\" ref={iconRef} />\r\n        <img\r\n          src={profile ? profile : tempFormData.profile}\r\n          alt=\"profile_preview\"\r\n          className=\"profile_preview\"\r\n          ref={previewRef}\r\n        />\r\n        <Button\r\n          variant=\"info\"\r\n          className=\"profile_button\"\r\n          onClick={handleProfileClick}>\r\n            회원사진 등록\r\n        </Button>\r\n        <input\r\n          type=\"file\"\r\n          className=\"hidden_file\"\r\n          hidden\r\n          onChange={handleProfile}\r\n          ref={profileRef}\r\n        />\r\n      </div>\r\n      <div className=\"column_reverse column\">\r\n        <Form.Group\r\n          outlined\r\n          label=\"이름\"\r\n          className=\"userName registerInput\"\r\n          placeholder=\"공백없이 입력해주세요.\"\r\n          onChange={handleValueChange}\r\n          name=\"userName\"\r\n          value={formData.userName ? formData.userName : \"\"}\r\n        />\r\n        <Form.Group\r\n          outlined\r\n          label=\"이메일\"\r\n          className=\"userEmail registerInput\"\r\n          placeholder=\"이메일 주소를 입력해주세요.\"\r\n          type=\"email\"\r\n          onChange={handleValueChange}\r\n          name=\"userMail\"\r\n          value={formData.userMail ? formData.userMail : \"\"}\r\n        />\r\n        <Form.Group\r\n          outlined\r\n          label=\"휴대전화\"\r\n          className=\"userPhone registerInput\"\r\n          placeholder=\"-없이 숫자만 입력해주세요.\"\r\n          onChange={handleValueChange}\r\n          name=\"userPhone\"\r\n          value={formData.userPhone ? formData.userPhone : \"\"}\r\n        />\r\n        <Form.Group\r\n          outlined\r\n          label=\"아이디\"\r\n          className=\"userId registerInput\"\r\n          placeholder=\"공백없이 입력해주세요.\"\r\n          onChange={handleValueChange}\r\n          name=\"userId\"\r\n          value={formData.userId ? formData.userId : \"\"}\r\n        />\r\n        <Form.Group\r\n          outlined\r\n          label=\"비밀번호\"\r\n          className=\"userPassword registerInput\"\r\n          type=\"password\"\r\n          placeholder=\"비밀번호를 입력해주세요.\"\r\n          onChange={handleValueChange}\r\n          name=\"userPassword\"\r\n        />\r\n        <Form.Group\r\n          outlined\r\n          label=\"비밀번호 확인\"\r\n          className=\"userPassword2 registerInput\"\r\n          type=\"password\"\r\n          placeholder=\"비밀번호를 입력해주세요.\"\r\n          onChange={handleValueChange}\r\n          name=\"userPassword2\"\r\n        />\r\n      </div>\r\n      <div className=\"column\">\r\n        <Button variant=\"success\" className={props.info ? \"registerButton updateButton\" : \"registerButton\"} type=\"button\" onClick={props.info ? updateSubmit : registerSubmit}>\r\n          {props.info ? \"회원 정보 수정\" : \"회원 가입\"}\r\n        </Button>\r\n        {!props.info ? (\r\n          <Link to=\"/login\">\r\n            <Button variant=\"warning\" className=\"registerCancleButton\">\r\n              회원가입 취소\r\n            </Button>\r\n          </Link>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}